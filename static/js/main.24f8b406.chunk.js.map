{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","components/Clock/Clock.module.css","redux/phoneActions.js","redux/phoneReducer.js","services/contactsAPI.js","redux/phoneStore.js","components/ContactList/ContactListItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Clock/Clock.jsx","App.jsx","index.js"],"names":["module","exports","setFilter","createAction","filterReducer","createReducer","state","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","build","getContacts","query","providesTags","result","map","type","id","deleteContact","mutation","url","method","invalidatesTags","error","addContact","newContact","body","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ContactItem","contact","delItem","className","s","item","name","tel","href","phone","btnDel","onClick","Loader","backdrop","loader","ContactList","filter","useSelector","data","isFetching","length","count","contacts","toLocaleLowerCase","includes","toLowerCase","Filter","value","dispatch","useDispatch","TextField","label","variant","color","fullWidth","autoComplete","onChange","e","target","pattern","title","required","ContactsForm","useForm","register","handleSubmit","reset","errors","formState","form","onSubmit","existContact","some","el","existNumber","toast","success","input","btnAdd","Clock","useState","Date","time","setTime","useEffect","clockInterval","setInterval","clearInterval","container","toLocaleTimeString","App","app","clock","autoClose","position","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24f8b406.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\",\"error\":\"ContactForm_error__2k1yS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"count\":\"ContactList_count__1BS8z\",\"title\":\"ContactList_title__ATLM_\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tel\":\"ContactList_tel__Ba6p5\",\"btnDel\":\"ContactList_btnDel__W2VVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"title\":\"App_title__-GfWs\",\"clock\":\"App_clock__2kEWG\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Loader_backdrop__2aLUo\",\"loader\":\"Loader_loader__1j2Bs\",\"rotation\":\"Loader_rotation__3ql_m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Clock_container__37Vd0\"};","import { createAction } from '@reduxjs/toolkit'\n\nexport const setFilter = createAction('filter/set')\n","import { createReducer } from '@reduxjs/toolkit'\n\nimport { setFilter } from './phoneActions'\n\nexport const filterReducer = createReducer('', {\n  [setFilter]: (state, { payload }) => (state = payload),\n})\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6199fec19022ea0017a7afc2.mockapi.io/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: (build) => ({\n    getContacts: build.query({\n      query: () => `contacts`,\n      providesTags: (result) =>\n        // --- is result available? ---\n        result\n          ? // --- successful query ---\n            [\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\n              { type: 'Contacts', id: 'LIST' },\n            ]\n          : // --- when we get an error, but still want to refetch this query ---\n            // --- when`{ type: 'Posts', id: 'LIST' }` is invalidated ----\n            [{ type: 'Contacts', id: 'LIST' }],\n    }),\n    deleteContact: build.mutation({\n      query: (id) => ({\n        url: `contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: (result, error, id) => [{ type: 'Contacts', id }],\n    }),\n    addContact: build.mutation({\n      query: (newContact) => ({\n        url: 'contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\n    }),\n  }),\n})\n\nexport const {\n  useGetContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactsApi\n","import { configureStore } from '@reduxjs/toolkit'\nimport { filterReducer } from './phoneReducer'\nimport { contactsApi } from '../services/contactsAPI'\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter: filterReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(contactsApi.middleware),\n})\n\n//--------------------------------------------------\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist'\n\n// import logger from 'redux-logger'\n// import phoneReducer from './phoneReducer'\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: phoneReducer,\n//   },\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }).concat(logger),\n//   devTools: process.env.NODE_ENV !== 'development',\n// })\n","import { useDeleteContactMutation } from '../../services/contactsAPI'\nimport PropTypes from 'prop-types'\n\nimport s from './ContactList.module.css'\n\nexport default function ContactItem({ contact }) {\n  const [delItem] = useDeleteContactMutation()\n  return (\n    <li className={s.item}>\n      <p className={s.name}>{contact.name}</p>\n      <div>\n        <a className={s.tel} href={`tel:${contact.phone}`}>\n          {contact.phone}\n        </a>\n\n        <button\n          className={s.btnDel}\n          id={contact.id}\n          onClick={() => delItem(contact.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  )\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    phone: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  delItem: PropTypes.func,\n}\n","import s from '../Loader/Loader.module.css'\nexport default function Loader() {\n  return (\n    <div className={s.backdrop}>\n      <span className={s.loader}></span>\n    </div>\n  )\n}\n","import ContactItem from './ContactListItem'\n\nimport { useGetContactsQuery } from '../../services/contactsAPI'\nimport { useSelector } from 'react-redux'\n\nimport Loader from '../Loader/Loader.jsx'\nimport s from './ContactList.module.css'\n\nexport default function ContactList() {\n  const filter = useSelector((state) => state.filter)\n\n  const { data, isFetching } = useGetContactsQuery()\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {data?.length === 0 && !isFetching && (\n        <p className={s.count}>No contacts added yet</p>\n      )}\n      {data && !isFetching && (\n        <ul className={s.contacts}>\n          {data\n            .filter((contact) =>\n              contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n            )\n            .map((contact) => (\n              <ContactItem key={contact.id} contact={contact} />\n            ))}\n        </ul>\n      )}\n    </>\n  )\n}\n","import TextField from '@mui/material/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setFilter } from '../../redux/phoneActions'\nimport s from './Filter.module.css'\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter)\n  const dispatch = useDispatch()\n  const onChange = (e) => dispatch(setFilter(e.target.value))\n  return (\n    <div className={s.filter}>\n      <label>\n        <TextField\n          id=\"standard-search\"\n          label=\"Find contacts by name\"\n          type=\"search\"\n          variant=\"standard\"\n          color=\"warning\"\n          fullWidth\n          autoComplete=\"off\"\n          // focused\n          value={value}\n          onChange={onChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          required\n        />\n      </label>\n    </div>\n  )\n}\n","import { useForm } from 'react-hook-form'\nimport { toast } from 'react-toastify'\n\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../services/contactsAPI'\n\nimport s from './ContactForm.module.css'\n\nexport default function ContactsForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n\n    formState: { errors },\n  } = useForm()\n\n  const { data: contacts } = useGetContactsQuery()\n  const [addContact] = useAddContactMutation()\n\n  const onSubmit = (data) => {\n    const existContact = contacts.some(\n      (el) => el.name.toLowerCase() === data.name.toLowerCase(),\n    )\n    const existNumber = contacts.some(\n      (el) => el.phone.toLowerCase() === data.phone.toLowerCase(),\n    )\n    if (existContact) {\n      toast.error(`Name is already in contact list`)\n      return\n    } else if (existNumber) {\n      toast.error(`Number is already in contact list`)\n      return\n    } else {\n      addContact(data)\n      toast.success(`Successfully added!`)\n      reset()\n    }\n  }\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          {...register('name', {\n            required: true,\n            pattern: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n          })}\n          className={s.input}\n        />\n        {errors?.name?.type === 'required' && (\n          <p className={s.error}>This field is required</p>\n        )}\n        {errors?.name?.type === 'pattern' && (\n          <p className={s.error}>Alphabetical characters only</p>\n        )}\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          title=\"The phone number must be digits and may contain spaces, dashes, parentheses and may start with +\"\n          {...register('phone', {\n            required: true,\n            pattern: /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}[-.\\s]?\\d{1,9}[-.\\s]?\\d{1,9}[-.\\s]?\\d{1,9}[-.\\s]?\\d{1,9}[-.\\s]?\\d{1,9}/,\n          })}\n          className={s.input}\n        />\n        {errors?.phone?.type === 'required' && (\n          <p className={s.error}>This field is required</p>\n        )}\n        {errors?.phone?.type === 'pattern' && (\n          <p className={s.error}> Minimum 10 numeric characters</p>\n        )}\n      </label>\n      <button type=\"submit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  )\n}\n","import { useState, useEffect } from 'react';\n\nimport s from './Clock.module.css';\n\nexport default function Clock() {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const clockInterval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(clockInterval);\n    };\n  }, []);\n\n  return (\n    <div className={s.container}>\n      <p> Current time: {time.toLocaleTimeString()}</p>\n    </div>\n  );\n}\n","// Import components\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport ContactForm from './components/ContactForm/ContactForm'\nimport { ToastContainer } from 'react-toastify'\nimport Clock from 'components/Clock/Clock'\n\nimport '../node_modules/react-toastify/dist/ReactToastify.css'\n\nimport s from './App.module.css'\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <h2 className={s.clock}>\n        <Clock />\n      </h2>\n      <ToastContainer autoClose={3000} position=\"top-center\" />\n      <ContactForm />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport { store } from './redux/phoneStore'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}