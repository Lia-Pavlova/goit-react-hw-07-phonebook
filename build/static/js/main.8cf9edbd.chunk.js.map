{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/phoneActions.js","redux/phoneReducer.js","redux/phoneStore.js","redux/phoneOperations.js","redux/phoneSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","App.jsx","index.js"],"names":["module","exports","phoneActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContact","dataContacts","createReducer","_","action","payload","state","some","contact","name","toLowerCase","alert","filter","id","isLoading","error","combineReducers","store","configureStore","reducer","contacts","phoneReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","axios","defaults","baseURL","phoneOperations","fetchContacts","dispatch","a","get","data","massage","addContact","contactData","shortid","generate","completed","post","then","catch","deleteContacts","contactId","delete","getFilter","getVisibleContacts","createSelector","normalizeFilter","includes","phoneSelectors","getContacts","connect","onDeleteContacts","className","s","map","number","item","tel","btnDel","onClick","value","onChange","event","currentTarget","TextField","label","type","variant","color","fullWidth","autoComplete","pattern","title","required","onSubmit","useState","setName","setNumber","handleChange","form","preventDefault","input","btnAdd","App","app","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cf9edbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tel\":\"ContactList_tel__Ba6p5\",\"btnDel\":\"ContactList_btnDel__W2VVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"text\":\"Filter_text__20oAI\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from '@reduxjs/toolkit'\n\n//--- !synchronous Action, which will come to reducer ---\n\n//--- в ожидании (pending) ---\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest')\n\n//--- выполнено (fulfilled) ---\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess')\n\n//--- отклоненный (rejected) ---\nconst fetchContactsError = createAction('contacts/fetchContactsError')\n\nconst addContactsRequest = createAction('contacts/addContactsRequest')\nconst addContactsSuccess = createAction('contacts/addContactsSuccess')\nconst addContactsError = createAction('contacts/addContactsError')\n\nconst deleteContactsRequest = createAction('contacts/deleteContactsRequest')\nconst deleteContactsSuccess = createAction('contacts/deleteContactsSuccess')\nconst deleteContactsError = createAction('contacts/deleteContactsError')\n\nconst filterContact = createAction('contacts/filterContact')\n\nconst phoneActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  filterContact,\n}\nexport default phoneActions\n","import { createReducer, combineReducers } from '@reduxjs/toolkit'\n\nimport phoneActions from './phoneActions'\n\n//---------------------------------------------------------------------------\nconst dataContacts = createReducer([], {\n  [phoneActions.fetchContactsSuccess]: (_, action) => action.payload,\n  [phoneActions.addContactsSuccess]: (state, action) => {\n    if (\n      state.some(\n        (contact) =>\n          contact.name.toLowerCase() === action.payload.name.toLowerCase(),\n      )\n    ) {\n      alert(`This contact already exists`)\n      return\n    }\n    return [...state, action.payload]\n  },\n  [phoneActions.deleteContactsSuccess]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n})\n\nconst isLoading = createReducer(false, {\n  [phoneActions.fetchContactsRequest]: () => true,\n  [phoneActions.fetchContactsSuccess]: () => false,\n  [phoneActions.fetchContactsError]: () => false,\n\n  [phoneActions.addContactsRequest]: () => true,\n  [phoneActions.addContactsSuccess]: () => false,\n  [phoneActions.addContactsError]: () => false,\n\n  [phoneActions.deleteContactsRequest]: () => true,\n  [phoneActions.deleteContactsSuccess]: () => false,\n  [phoneActions.deleteContactsError]: () => false,\n})\n\nconst filter = createReducer('', {\n  [phoneActions.filterContact]: (_, action) => action.payload,\n})\n\nconst error = createReducer(null, {\n  [phoneActions.fetchContactsError]: (_, action) => action.payload,\n  [phoneActions.fetchContactsRequest]: () => null,\n})\n\n//const error = createReducer(null, {});\n\nexport default combineReducers({\n  dataContacts,\n  isLoading,\n  filter,\n  error,\n})\n","import { configureStore } from '@reduxjs/toolkit'\n\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\n\nimport logger from 'redux-logger'\nimport phoneReducer from './phoneReducer'\n\nexport const store = configureStore({\n  reducer: {\n    contacts: phoneReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== 'development',\n})\n","import axios from 'axios'\nimport shortid from 'shortid'\nimport phoneActions from './phoneActions'\n\naxios.defaults.baseURL =\n  'https://6199fec19022ea0017a7afc2.mockapi.io/phonebook/'\n\n// fetchContacts - использует синхронные медоды phoneActions по http запросу. (до, успех и ошибка)\n\n//--- fetchContacts ---\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(phoneActions.fetchContactsRequest())\n\n  try {\n    const { data } = await axios.get('/contacts')\n    dispatch(phoneActions.fetchContactsSuccess(data))\n  } catch (error) {\n    dispatch(phoneActions.fetchContactsError(error.massage))\n  }\n}\n\n//--- addContact ---\nconst addContact = (contactData) => (dispatch) => {\n  const contact = {\n    id: shortid.generate(),\n    ...contactData,\n    completed: false,\n  }\n\n  dispatch(phoneActions.addContactsRequest())\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(phoneActions.addContactsSuccess(data)))\n    .catch((error) => dispatch(phoneActions.addContactsError(error.massage)))\n}\n\n//--- deleteContacts ---\nconst deleteContacts = (contactId) => (dispatch) => {\n  dispatch(phoneActions.deleteContactsRequest())\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(phoneActions.deleteContactsSuccess(contactId)))\n    .catch((error) => dispatch(phoneActions.deleteContactsError(error.massage)))\n}\n\nconst phoneOperations = { fetchContacts, addContact, deleteContacts }\nexport default phoneOperations\n\n//------------------------\n// //--- fetchContacts ---\n// export const fetchContacts = createAsyncThunk(\n//   phoneActions.fetchContacts,\n//   async () => {\n//     const contacts = await fetchContactsAPI()\n//     return contacts\n//   },\n// )\n\n// //--- addContact ---\n// export const addContacts = createAsyncThunk(\n//   phoneActions.addContacts,\n//   async (contactData) => {\n//     const { name, number } = contactData\n//     const contact = await addContactsAPI(name, number)\n\n//     return contact\n//   },\n// )\n\n// //--- deleteContacts ---\n// export const deleteContacts = createAsyncThunk(\n//   phoneActions.deleteContacts,\n//   async (contactId) => {\n//     if (!contactId) {\n//       return\n//     }\n//     const contact = await deleteContactsAPI(contactId)\n\n//     return contact\n//   },\n// )\n","// import { createSelector } from '@reduxjs/toolkit'\n\nimport { createSelector } from 'reselect'\n\n//----------------------------------------------------------------------------\nconst getContacts = (state) => state.contacts.isLoading\nconst getFilter = (state) => state.contacts.filter\nconst getAllContacts = (state) => state.contacts.dataContacts\n\n// --- search on filter ---\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    )\n  },\n)\n\nconst phoneSelectors = { getContacts, getFilter, getVisibleContacts }\n\nexport default phoneSelectors\n\n// ------------------------------\n// --- another way ---\n\n// const getVisibleContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizeFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizeFilter),\n//   );\n// };\n\n// ------------------------------\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport phoneOperations from '../../redux/phoneOperations'\nimport phoneSelectors from '../../redux/phoneSelectors'\n\nimport s from './ContactList.module.css'\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n)\n\nconst mapStateToProps = (state) => ({\n  contacts: phoneSelectors.getVisibleContacts(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContacts: (id) => dispatch(phoneOperations.deleteContacts(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\n","import TextField from '@mui/material/TextField'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport phoneActions from '../../redux/phoneActions'\nimport phoneSelectors from '../../redux/phoneSelectors'\n\nimport s from './Filter.module.css'\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label>\n      <TextField\n        id=\"standard-search\"\n        label=\"Find contacts by name\"\n        type=\"search\"\n        variant=\"standard\"\n        color=\"warning\"\n        fullWidth\n        autoComplete=\"off\"\n        // focused\n        value={value}\n        onChange={onChange}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n        required\n      />\n    </label>\n  </div>\n)\n\nconst mapStateToProps = (state) => ({\n  value: phoneSelectors.getFilter(state),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) =>\n    dispatch(phoneActions.filterContact(event.currentTarget.value)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n","import { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport phoneOperations from '../../redux/phoneOperations'\n\nimport s from './ContactForm.module.css'\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  // --- input  to \"input\" ---\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget\n\n    switch (name) {\n      case 'name':\n        setName(value)\n        break\n\n      case 'number':\n        setNumber(value)\n        break\n\n      default:\n        return\n    }\n  }\n\n  // --- add contact via button ---\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    onSubmit({ name, number })\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must be digits and may contain spaces, dashes, parentheses and may start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"submit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (value) => dispatch(phoneOperations.addContact(value)),\n})\n\nexport default connect(null, mapDispatchToProps)(ContactForm)\n","// Import components\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport ContactForm from './components/ContactForm/ContactForm'\n\nimport s from './App.module.css'\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport { store } from './redux/phoneStore'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}